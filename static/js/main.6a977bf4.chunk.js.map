{"version":3,"sources":["components/Navbar.tsx","pages/Main.tsx","constants.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","React","useState","navbarOpen","setNavbarOpen","className","href","type","onClick","tryParseRawItem","rawItem","decodeURIComponent","split","name","display","value","replace","str","searchChar","length","Error","seen","containsMultiple","success","error","result","parseFloat","err","findMatchingItem","query","arr","find","i","toLowerCase","includes","byName","a","b","aVal","toLocaleLowerCase","bVal","localeCompare","Main","useQueryParam","ArrayParam","rawItems","setRawItems","show","setShow","globalError","setGlobalError","currentOptions","setCurrentOptions","formula","setFormula","source","setSource","items","useMemo","results","push","undefined","map","join","winner","first","second","prev","icon","faChevronCircleUp","faChevronCircleDown","faTimesCircle","rows","cols","onChange","e","target","v","encodeURIComponent","trim","reduce","total","cur","window","location","host","placeholder","sort","item","handleOptionClick","style","flexGrow","console","log","before","after","beforeItem","afterItem","onFocus","select","App","ReactRouterRoute","Route","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a977bf4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Navbar: React.FC = () => {\r\n  const [navbarOpen, setNavbarOpen] = React.useState(false);\r\n  return (\r\n    <>\r\n      <nav className=\"relative shadow-lg bg-white shadow-lg flex flex-wrap items-center justify-between px-2 py-3 navbar-expand-lg\">\r\n        <div className=\"container px-4 mx-auto flex flex-wrap items-center justify-between\">\r\n          <div className=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\">\r\n            <a\r\n              className=\"text-gray-800 text-sm font-bold leading-relaxed inline-block mr-4 py-2 whitespace-no-wrap uppercase\"\r\n              href=\"/\"\r\n            >\r\n              This Or That Helper\r\n            </a>\r\n            <button\r\n              className=\"cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\r\n              type=\"button\"\r\n              onClick={() => setNavbarOpen(!navbarOpen)}\r\n            >\r\n              <i className=\"text-gray-800 fas fa-bars\"></i>\r\n            </button>\r\n          </div>\r\n          {/* <div\r\n            className={\r\n              'lg:flex flex-grow items-center bg-white lg:bg-transparent lg:shadow-none' +\r\n              (navbarOpen ? ' block rounded shadow-lg' : ' hidden')\r\n            }\r\n            id=\"example-navbar-warning\"\r\n          >\r\n            <ul className=\"flex flex-col lg:flex-row list-none mr-auto\">\r\n              <li className=\"flex items-center\">\r\n                <a\r\n                  className=\"text-gray-800 hover:text-gray-600 px-3 py-4 lg:py-2 flex items-center text-xs uppercase font-bold\"\r\n                  href=\"https://www.creative-tim.com/learning-lab/tailwind-starter-kit#/landing\"\r\n                >\r\n                  <i className=\"text-gray-500 far fa-file-alt text-lg leading-lg mr-2\" />{' '}\r\n                  Docs\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <ul className=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\r\n              <li className=\"flex items-center\">\r\n                <a\r\n                  className=\"text-gray-800 hover:text-gray-600 px-3 py-4 lg:py-2 flex items-center text-xs uppercase font-bold\"\r\n                  href=\"#pablo\"\r\n                >\r\n                  <i className=\"text-gray-500 fab fa-facebook text-lg leading-lg \" />\r\n                  <span className=\"lg:hidden inline-block ml-2\">Share</span>\r\n                </a>\r\n              </li>\r\n\r\n              <li className=\"flex items-center\">\r\n                <a\r\n                  className=\"text-gray-800 hover:text-gray-600 px-3 py-4 lg:py-2 flex items-center text-xs uppercase font-bold\"\r\n                  href=\"#pablo\"\r\n                >\r\n                  <i className=\"text-gray-500 fab fa-twitter text-lg leading-lg \" />\r\n                  <span className=\"lg:hidden inline-block ml-2\">Tweet</span>\r\n                </a>\r\n              </li>\r\n\r\n              <li className=\"flex items-center\">\r\n                <a\r\n                  className=\"text-gray-800 hover:text-gray-600 px-3 py-4 lg:py-2 flex items-center text-xs uppercase font-bold\"\r\n                  href=\"#pablo\"\r\n                >\r\n                  <i className=\"text-gray-500 fab fa-github text-lg leading-lg \" />\r\n                  <span className=\"lg:hidden inline-block ml-2\">Star</span>\r\n                </a>\r\n              </li>\r\n\r\n              <li className=\"flex items-center\">\r\n                <button\r\n                  className=\"bg-pink-500 text-white active:bg-pink-600 text-xs font-bold uppercase px-4 py-2 rounded shadow hover:shadow-md outline-none focus:outline-none lg:mr-1 lg:mb-0 ml-3 mb-3\"\r\n                  type=\"button\"\r\n                  style={{ transition: 'all .15s ease' }}\r\n                >\r\n                  <i className=\"fas fa-arrow-alt-circle-down\"></i> Download\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </div> */}\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n","import {\r\n  faChevronCircleDown,\r\n  faChevronCircleUp,\r\n  faTimesCircle,\r\n} from '@fortawesome/pro-duotone-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useMemo, useState } from 'react';\r\nimport { ArrayParam, useQueryParam } from 'use-query-params';\r\n\r\nimport { Navbar } from '../components';\r\nimport { GITHUB_PAGES_MAX_URL_LENGTH } from '../constants';\r\n\r\nconst containsMultiple = (str: string, searchChar: string): boolean => {\r\n  if (searchChar.length !== 1) {\r\n    throw new Error('Invalid search character for containsMultiple specified.');\r\n  }\r\n\r\n  let seen = false;\r\n  for (const char of str) {\r\n    if (char === searchChar) {\r\n      if (seen) {\r\n        return true;\r\n      } else {\r\n        seen = true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\ntype Item = {\r\n  name: string;\r\n  display: string;\r\n  value: number;\r\n};\r\ntype ParseResult = { success: boolean; result?: Item; error?: string };\r\nconst tryParseRawItem = (rawItem: string): ParseResult => {\r\n  try {\r\n    const decoded = decodeURIComponent(rawItem);\r\n    const [name, display] = decoded.split(' - ');\r\n    const value = display.replace(/[^0-9.]/g, '');\r\n    if (!value || containsMultiple(value, '.')) {\r\n      return { success: false, error: `${display} is not a valid number` };\r\n    } else {\r\n      return {\r\n        success: true,\r\n        result: {\r\n          name,\r\n          display,\r\n          value: parseFloat(value),\r\n        },\r\n      };\r\n    }\r\n  } catch (err) {\r\n    // console.error(`Error parsing '${rawItem}':`);\r\n    // console.error(err);\r\n    return { success: false, error: `Unknown error parsing ${rawItem}` };\r\n  }\r\n};\r\n\r\nconst findMatchingItem = (query: string, arr: Item[]): Item | undefined => {\r\n  return arr.find((i) => i.name.toLowerCase().includes(query));\r\n};\r\n\r\nconst byName = (a: Item, b: Item): number => {\r\n  const aVal = a.name.toLocaleLowerCase();\r\n  const bVal = b.name.toLocaleLowerCase();\r\n\r\n  return aVal.localeCompare(bVal);\r\n};\r\n\r\nexport default function Main() {\r\n  const [rawItems, setRawItems] = useQueryParam('i', ArrayParam);\r\n\r\n  const [show, setShow] = useState<boolean>(!rawItems?.length);\r\n  // const [errors, setErrors] = useState<string[]>([]);\r\n  const [globalError, setGlobalError] = useState<string>();\r\n  const [currentOptions, setCurrentOptions] = useState<[Item?, Item?]>();\r\n  const [formula, setFormula] = useState<string>('');\r\n  const [source, setSource] = useState<string>();\r\n\r\n  // const items: Item[] = [];\r\n  const items = useMemo(() => {\r\n    const results: Item[] = [];\r\n    if (rawItems) {\r\n      for (const rawItem of rawItems) {\r\n        if (rawItem) {\r\n          const { success, result, error } = tryParseRawItem(rawItem);\r\n          if (success && result) {\r\n            results.push(result);\r\n          } else if (error) {\r\n            // setErrors((prev) => [...prev, error]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (source === undefined) {\r\n      setSource(results.map((i) => `${i.name} - ${i.display}`).join('\\n'));\r\n    }\r\n\r\n    return results;\r\n  }, [rawItems, source]);\r\n\r\n  const winner = useMemo(() => {\r\n    const first = currentOptions?.[0];\r\n    const second = currentOptions?.[1];\r\n    if (!first || !second) {\r\n      return undefined;\r\n    } else if (first.value > second.value) {\r\n      return first;\r\n    } else {\r\n      return second;\r\n    }\r\n  }, [currentOptions]);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    const { value } = e.target;\r\n    setGlobalError(undefined);\r\n    setSource(value);\r\n    const rows = value.split('\\n').map((v) => encodeURIComponent(v.trim()));\r\n    const totalLength = rows.reduce(\r\n      (total, cur) => total + cur.length + 3,\r\n      window.location.host.length,\r\n    );\r\n    if (totalLength > GITHUB_PAGES_MAX_URL_LENGTH) {\r\n      setGlobalError(\r\n        `URL length exceeds ${GITHUB_PAGES_MAX_URL_LENGTH} characters - users will have to copy & paste items manually.`,\r\n      );\r\n      setRawItems(undefined);\r\n    } else {\r\n      setRawItems(rows);\r\n    }\r\n  };\r\n\r\n  const handleFormulaChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    console.log(value);\r\n    setFormula(value);\r\n    const [before, after] = value.split('..');\r\n    const beforeItem = before\r\n      ? findMatchingItem(before.toLowerCase(), items)\r\n      : undefined;\r\n    const afterItem = after\r\n      ? findMatchingItem(after.toLowerCase(), items)\r\n      : undefined;\r\n\r\n    setCurrentOptions([beforeItem, afterItem]);\r\n  };\r\n\r\n  const handleOptionClick = (item: Item) => {\r\n    const [first, second] = currentOptions ?? [];\r\n\r\n    if (first && second) {\r\n      setCurrentOptions([item, undefined]);\r\n      setFormula(`${item.name}..`);\r\n    } else if (first === undefined) {\r\n      setCurrentOptions((prev) => [item, prev?.[1]]);\r\n      setFormula(`${item.name}..${second?.name ?? ''}`);\r\n    } else if (second === undefined) {\r\n      setFormula(`${first.name}..${item.name}`);\r\n      setCurrentOptions((prev) => [prev?.[0], item]);\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setSource('');\r\n    setRawItems(undefined);\r\n    setCurrentOptions(undefined);\r\n    setFormula('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <main>\r\n        <section className=\"bg-gray-300\">\r\n          <div className=\"container mx-auto px-4\">\r\n            <div className=\"flex flex-wrap\">\r\n              {globalError ? (\r\n                <div className=\"text-white w-full mt-10 px-6 py-4 border-0 rounded relative bg-red-500\">\r\n                  <span className=\"text-xl inline-block mr-5 align-middle\">\r\n                    <i className=\"fas fa-bell\" />\r\n                  </span>\r\n                  <span className=\"inline-block align-middle mr-8\">\r\n                    {globalError}\r\n                  </span>\r\n                </div>\r\n              ) : null}\r\n              <div className=\"py-6 w-full px-4\">\r\n                {/* <h1 className=\"text-4xl font-bold mb-4\">Howdy</h1> */}\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"inline-flex flex items-center justify-center space-x-1 rounded-md border border-gray-300 px-4 py-2 bg-white text-base leading-6 font-medium text-gray-700 shadow-sm hover:text-gray-500 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue transition ease-in-out duration-150 sm:text-sm sm:leading-5\"\r\n                  onClick={() => setShow((prev) => !prev)}\r\n                >\r\n                  <span>{show ? 'Hide' : 'Show'} Raw List</span>\r\n                  <FontAwesomeIcon\r\n                    icon={show ? faChevronCircleUp : faChevronCircleDown}\r\n                  />\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"ml-4 inline-flex flex items-center justify-center space-x-1 rounded-md border border-red-300 px-4 py-2 bg-white text-base leading-6 font-medium text-red-700 shadow-sm hover:text-red-500 focus:outline-none focus:border-red-300 focus:shadow-outline-blue transition ease-in-out duration-150 sm:text-sm sm:leading-5\"\r\n                  onClick={handleClear}\r\n                >\r\n                  <span>Clear List</span>\r\n                  <FontAwesomeIcon icon={faTimesCircle} />\r\n                </button>\r\n                {show && (\r\n                  <div className=\"rounded mt-4\">\r\n                    <textarea\r\n                      rows={8}\r\n                      cols={80}\r\n                      onChange={handleChange}\r\n                      className=\"px-3 py-3 placeholder-gray-400 text-gray-700 bg-white text-sm shadow focus:outline-none focus:shadow-outline w-full\"\r\n                      placeholder=\"Name - Value\"\r\n                      value={source}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className=\"pb-20\">\r\n          <div className=\"container mx-auto px-4\">\r\n            <div className=\"flex flex-col-reverse lg:flex-row\">\r\n              <div className=\"w-full lg:w-1/4 pt-8 px-4\">\r\n                {items.sort(byName).map((i) => (\r\n                  <button\r\n                    key={i.name}\r\n                    className=\"w-full align-start text-left inline-flex space-x-4 hover:underline\"\r\n                    onClick={() => handleOptionClick(i)}\r\n                  >\r\n                    <span style={{ flexGrow: 1 }}>{i.name}</span>\r\n\r\n                    <span>{i.display}</span>\r\n                  </button>\r\n                ))}\r\n              </div>\r\n              <div\r\n                className=\"w-full lg:w-3/4 pt-8 px-4 flex-grow\"\r\n                style={{ flexGrow: 1 }}\r\n              >\r\n                <p className=\"mb-4\">\r\n                  <strong>Formula help:</strong> Type enough characters for a\r\n                  unique match for each item that is being compared, separated\r\n                  by '..' For example, to compare \"Apple\" and \"Orange\" you could\r\n                  type \"app..ora\"\r\n                </p>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"w-full transition-colors duration-100 ease-in-out focus:outline-0 border border-transparent focus:bg-white focus:border-gray-300 placeholder-gray-600 rounded-lg bg-gray-200 py-2 px-4 block w-full appearance-none leading-normal ds-input\"\r\n                  placeholder=\"Enter formula\"\r\n                  value={formula}\r\n                  onChange={handleFormulaChange}\r\n                  onFocus={(e) => e.target.select()}\r\n                />\r\n                <div className=\"my-10 flex\">\r\n                  <span\r\n                    className=\"flex align-center justify-center text-center\"\r\n                    style={{ flexGrow: 1 }}\r\n                  >\r\n                    {currentOptions?.[0]?.name}\r\n                    <br />\r\n                    {currentOptions?.[0]?.display}\r\n                  </span>\r\n                  <span\r\n                    className=\"flex align-center justify-center text-center\"\r\n                    style={{ flexGrow: 1 }}\r\n                  >\r\n                    {currentOptions?.[1]?.name}\r\n                    <br />\r\n                    {currentOptions?.[1]?.display}\r\n                  </span>\r\n                </div>\r\n                <div className=\"my-10 flex w-full\">\r\n                  <p className=\"text-center w-full text-4xl\">\r\n                    <strong>{winner?.name}</strong>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n      {/* <Footer /> */}\r\n    </>\r\n  );\r\n}\r\n","export const GITHUB_PAGES_MAX_URL_LENGTH = 8_201;\r\n","import React from 'react';\nimport Main from './pages/Main';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { QueryParamProvider } from 'use-query-params';\n\nfunction App() {\n  return (\n    <Router>\n      <QueryParamProvider ReactRouterRoute={Route}>\n        <div className=\"App\">\n          <Main />\n        </div>\n      </QueryParamProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}